{"version":3,"sources":["webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/js/swiper.esm.bundle.js"],"names":["doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","dom7_modular_data","key","el","dom7ElementDataStorage","dataKey","dom7_modular_transform","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","data","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","dom7_modular_offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","matchedItems","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","index","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","offset","Object","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","PointerEvent","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroupSkip","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","skip","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","wrapperEl","x","y","z","newProgress","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","scrollTo","behavior","onTranslateToWrapperTransitionEnd","destroyed","swiper_esm_bundle_translate","transitionStart","direction","autoHeight","dir","swiper_esm_bundle_transitionEnd","swiper_esm_bundle_transition","slideTo","initialSlide","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","increment","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevIndex","prevSnap","slideReset","slideToClosest","threshold","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","platform","ua","device","ios","android","androidChrome","desktop","iphone","ipod","ipad","edge","ie","firefox","macos","windows","cordova","phonegap","electron","screenWidth","screenHeight","toLowerCase","os","osVersion","webView","standalone","matchMedia","webview","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","touchEventsTarget","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","moveDistance","currentSlideSize","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","isNavButtonTarget","navigation","nextEl","prevEl","onResize","breakpoints","setBreakpoint","autoplay","running","paused","run","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","dummyEventAttached","dummyEventListener","attachEvents","touchEvents","onClick","start","move","end","passiveListeners","passive","cancel","updateOnWindowResize","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","containerModifierClass","directionChanged","needsReLoop","changeDirection","points","point","startsWith","minRatio","substr","innerHeight","sort","b","innerWidth","swiper_esm_bundle_breakpoints","addClasses","classNames","suffixes","suffix","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","lastSlidePosition","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","shadowRoot","options","touchEventsTouch","touchEventsDesktop","clickTimeout","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","swiper_esm_bundle_Browser","isSafari","isEdge","isUiWebView","test","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","lastEventBeforeSnap","recentWheelEvents","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","eventsTarged","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","newEvent","sign","ignoreWheelEvents","sensitivity","timeout","shift","prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","raw","animateSlider","releaseScroll","getTime","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","isHidden","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","clientX","clientY","dragStartPos","positionRatio","getPointerPosition","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","activeListenerWithCapture","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","Autoplay$1","disableOnInteraction","pause","visibilityState","onVisibilityChange","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","prefixedPointerEvents","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","multipleActiveThumbs","Thumbs$1","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d20fe32.dd19eea5.js","sourcesContent":["/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 5.3.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://swiperjs.com\n *\n * Copyright 2014-2020 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: January 11, 2020\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document as document$1 } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document$1 instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!window.PointerEvent && ('maxTouchPoints' in window.navigator) && window.navigator.maxTouchPoints > 0,\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  function slidesForMargin(slideIndex) {\n    if (!params.cssMode) return true;\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n    return true;\n  }\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        const groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        const slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        const columnsInGroup = groupIndex === 0\n          ? params.slidesPerGroup\n          : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = (slideIndexInGroup - row * columnsInGroup) + groupIndex * params.slidesPerGroup;\n\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide.css(\n        `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n        (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n      );\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.filter(slidesForMargin).css({ marginLeft: `${spaceBetween}px` });\n      else slides.filter(slidesForMargin).css({ marginRight: `${spaceBetween}px` });\n    } else slides.filter(slidesForMargin).css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map((snap) => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = (swiper && swiper.translate && (swiper.translate * multiplier)) || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nfunction translateTo (translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n\n  const {\n    params,\n    wrapperEl,\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n  else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex, params } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl, wrapperEl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= slidesGrid.length) snapIndex = slidesGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -translate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    snapGrid.forEach((snap) => {\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n    });\n  }\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if ((translate - currentSnap) > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if ((translate - prevSnap) <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document$1.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n\n  swiper.emit('beforeLoopFix');\n\n  const {\n    activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const platform = window.navigator.platform;\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    edge: false,\n    ie: false,\n    firefox: false,\n    macos: false,\n    windows: false,\n    cordova: !!(window.cordova || window.phonegap),\n    phonegap: !!(window.cordova || window.phonegap),\n    electron: false,\n  };\n\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n  const edge = ua.indexOf('Edge/') >= 0;\n  const firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n  const windows = platform === 'Win32';\n  const electron = ua.toLowerCase().indexOf('electron') >= 0;\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  if (!ipad\n    && macos\n    && Support.touch\n    && (\n      (screenWidth === 1024 && screenHeight === 1366) // Pro 12.9\n      || (screenWidth === 834 && screenHeight === 1194) // Pro 11\n      || (screenWidth === 834 && screenHeight === 1112) // Pro 10.5\n      || (screenWidth === 768 && screenHeight === 1024) // other\n    )\n  ) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    macos = false;\n  }\n\n  device.ie = ie;\n  device.edge = edge;\n  device.firefox = firefox;\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.ipod = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Webview\n  device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || window.navigator.standalone))\n    || (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\n  device.webview = device.webView;\n  device.standalone = device.webView;\n\n  // Desktop\n  device.desktop = !(device.ios || device.android) || electron;\n  if (device.desktop) {\n    device.electron = electron;\n    device.macos = macos;\n    device.windows = windows;\n    if (device.macos) {\n      device.os = 'macos';\n    }\n    if (device.windows) {\n      device.os = 'windows';\n    }\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($targetEl.is(data.formElements)) preventDefault = false;\n    if (\n      document$1.activeElement\n      && $(document$1.activeElement).is(data.formElements)\n      && document$1.activeElement !== $targetEl[0]\n    ) {\n      document$1.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document$1.activeElement) {\n    if (e.target === document$1.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += (i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup)) {\n    const increment = (i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = (stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  swiper.updateSlidesClasses();\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll () {\n  const swiper = this;\n  const { wrapperEl } = swiper;\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? -wrapperEl.scrollLeft : -wrapperEl.scrollTop;\n  // eslint-disable-next-line\n  if (swiper.translate === -0) swiper.translate = 0;\n\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n      el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n      if (!dummyEventAttached) {\n        document$1.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.addEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.addEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.addEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.addEventListener('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl.addEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  } else {\n    swiper.on('observerUpdate', onResize, true);\n  }\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.removeEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.removeEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.removeEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.removeEventListener('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl.removeEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params, $el,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const wasMultiRow = params.slidesPerColumn > 1;\n    const isMultiRow = breakpointParams.slidesPerColumn > 1;\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(`${params.containerModifierClass}multirow ${params.containerModifierClass}multirow-column`);\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(`${params.containerModifierClass}multirow`);\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(`${params.containerModifierClass}multirow-column`);\n      }\n    }\n\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n\n  const points = Object.keys(breakpoints).map((point) => {\n    if (typeof point === 'string' && point.startsWith('@')) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = window.innerHeight * minRatio;\n      return { value, point };\n    }\n    return { value: point, point };\n  });\n\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const { point, value } = points[i];\n    if (value <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n    if (params.slidesPerColumnFill === 'column') {\n      suffixes.push('multirow-column');\n    }\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n\n  if (params.cssMode) {\n    suffixes.push('css-mode');\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const params = swiper.params;\n  const wasLocked = swiper.isLocked;\n  const lastSlidePosition = swiper.slides.length > 0 && (params.slidesOffsetBefore + (params.spaceBetween * (swiper.slides.length - 1)) + ((swiper.slides[0]).offsetWidth) * swiper.slides.length);\n\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n    swiper.isLocked = lastSlidePosition <= swiper.size;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    let $wrapperEl;\n    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n      $wrapperEl = $(el.shadowRoot.querySelector(`.${swiper.params.wrapperClass}`));\n      // Children needs to return slot items\n      $wrapperEl.children = (options) => $el.children(options);\n    } else {\n      $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n    }\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document$1.activeElement && document$1.activeElement.nodeName && (document$1.activeElement.nodeName.toLowerCase() === 'input' || document$1.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) swiper.slideNext();\n      if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 34 || kc === 40) swiper.slideNext();\n      if (kc === 33 || kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document$1).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document$1).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document$1;\n\n  if (!isSupported) {\n    const element = document$1.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document$1.implementation\n    && document$1.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document$1.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document$1.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  lastEventBeforeSnap: undefined,\n  recentWheelEvents: [],\n  event() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  },\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) { // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: Utils.now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event,\n      };\n\n      // Keep the most recent events\n      const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\n          swiper.mousewheel.animateSlider(newEvent);\n        }\n      } else {\n        swiper.mousewheel.animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (swiper.mousewheel.releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = { time: Utils.now(), delta: Math.abs(delta), direction: Math.sign(delta) };\n      const { lastEventBeforeSnap } = swiper.mousewheel;\n      const ignoreWheelEvents = lastEventBeforeSnap\n        && newEvent.time < lastEventBeforeSnap.time + 500\n        && newEvent.delta <= lastEventBeforeSnap.delta\n        && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        let position = swiper.getTranslate() + (delta * params.sensitivity);\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = undefined;\n          const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15\n              && newEvent.time - firstEvent.time < 500\n              && firstEvent.delta - newEvent.delta >= 1\n              && newEvent.delta <= 6\n          ) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            swiper.mousewheel.lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n          if (!swiper.mousewheel.timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              const snapToThreshold = 0.5;\n              swiper.mousewheel.lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  animateSlider(newEvent) {\n    const swiper = this;\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        swiper.emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      swiper.emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    // Return false as a default\n    return false;\n  },\n  releaseScroll(newEvent) {\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        animateSlider: Mousewheel.animateSlider.bind(swiper),\n        releaseScroll: Mousewheel.releaseScroll.bind(swiper),\n        lastScrollTime: Utils.now(),\n        lastEventBeforeSnap: undefined,\n        recentWheelEvents: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n        swiper.mousewheel.disable();\n      }\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.cssMode) {\n        swiper.mousewheel.enable();\n      }\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              $firstDisplayedBullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n              $lastDisplayedBullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          } else {\n            $firstDisplayedBullet\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev`)\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev-prev`);\n            $lastDisplayedBullet\n              .next()\n              .addClass(`${params.bulletActiveClass}-next`)\n              .next()\n              .addClass(`${params.bulletActiveClass}-next-next`);\n          }\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientX : e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientY : e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop || !swiper.navigation) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.history.initialized && swiper.params.cssMode) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document$1.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document$1.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document$1.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n      if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onVisibilityChange() {\n          if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n            swiper.autoplay.pause();\n          }\n          if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n            swiper.autoplay.run();\n            swiper.autoplay.paused = false;\n          }\n        },\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n        document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    touchEnd() {\n      const swiper = this;\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.run();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n      document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop || (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      multipleActiveThumbs: true,\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n//# sourceMappingURL=swiper.esm.bundle.js.map\n"],"sourceRoot":""}